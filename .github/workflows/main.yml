name: CI Pipeline  

on:
  push:
    branches:
      - main 
      - deploy
  pull_request:
    branches:
      - main 
      - deploy 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Run tests
      run: |
        python -m unittest discover

  security-scan:
    runs-on: ubuntu-latest 
    needs: build 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10' 

      - name: Create virtual environment
        run: |
          python -m venv venv
          echo "Virtual environment created."

      - name: Install Bandit
        run: |
          . venv/bin/activate  # Para Linux
          pip install bandit==1.7.5

      - name: Run Bandit Security Scan
        run: |
          . venv/bin/activate  
          bandit -r .
        continue-on-error: true

      - name: Install Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.3.2/dependency-check-7.3.2-release.zip
          unzip dependency-check-7.3.2-release.zip -d ./dependency-check
          ls -R ./dependency-check

      - name: Run Dependency Check
        run: |
          ./dependency-check/dependency-check/bin/dependency-check.sh --project "EstudoDeCaso" -s . -o ./relatorios
  
  review:        
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Configurar ambiente Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instalar dependências
      run: |
        pip install -r requirements.txt

    - name: Deploy para estágio
      run: |
        echo "Realizando deploy no ambiente de stage"
        python ./todo_project/run.py
        DEPLOY_PID=$!

    - name: Aguardar o deploy iniciar
      run: |
        echo "Aguardando o deploy iniciar..."
        sleep 20 
    - name: Verificação de segurança com OWASP ZAP
      uses: zaproxy/action-baseline@v0.12.0
      with:
        target: 'http://localhost:5000'  
        format: 'HTML'
        output-path: './relatorios'
      continue-on-error: true

    - name: Parar o deploy
      run: |
        echo "Parando o deploy..."
        kill $DEPLOY_PID 